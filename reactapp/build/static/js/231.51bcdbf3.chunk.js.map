{"version":3,"file":"static/js/231.51bcdbf3.chunk.js","mappings":"+JAkEA,QA9DA,WACI,MAAOA,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,IACzBK,GAAWC,EAAAA,EAAAA,MAEXC,EADc,IAAIC,gBAAgBH,EAASI,QACvBC,IAAI,SAExBC,GAAuBC,EAAAA,EAAAA,cAAaC,IAA4C,IAADC,EACjF,MAEMC,GAA2C,QAAzBD,EAFPD,EAAEG,OAAOC,MAAMC,QAAQ,MAAO,IAEdC,MAAM,kBAAU,IAAAL,OAAA,EAAzBA,EAA2BM,KAAK,OAAQ,GAChErB,EAAYgB,EAAgB,GAC7B,IAEGM,GAAyBT,EAAAA,EAAAA,cAAaU,IACxC,MAAMC,EAAWD,EAAMN,OAAOC,MAAMC,QAAQ,MAAO,IACnDhB,EAAcqB,EAASC,MAAM,EAAG,GAAG,GACpC,IAEGC,GAAkBb,EAAAA,EAAAA,cAAaU,IACjC,MAAMC,EAAWD,EAAMN,OAAOC,MAAMC,QAAQ,MAAO,IACnDd,EAAOmB,EAASC,MAAM,EAAG,GAAG,GAC7B,IAEH,OACIE,EAAAA,EAAAA,MAAA,WAASC,UAAU,eAAcC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sBAAqBC,SAAA,CAAErB,EAAM,cAC3CmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAC,+EACtCC,EAAAA,EAAAA,KAAA,SACIF,UAAU,sBACVG,KAAK,OACLC,YAAY,iCACZd,MAAOnB,EACPkC,SAAUrB,EACVsB,UAAW,MAEfP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SACIF,UAAU,sBACVG,KAAK,OACLC,YAAY,2BACZd,MAAOhB,EACP+B,SAAUX,EACVY,UAAW,KAEfJ,EAAAA,EAAAA,KAAA,SACIF,UAAU,sBACVG,KAAK,OACLC,YAAY,UACZd,MAAOd,EACP6B,SAAUP,EACVQ,UAAW,WAIvBJ,EAAAA,EAAAA,KAAA,KAAGK,KAAK,OAAOP,UAAU,yBAAwBC,SAAC,uDAG9D,C","sources":["pages/PaymentPage.tsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport '../PaymentStyle.scss';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction PaymentPage() {\r\n    const [ccNumber, setCcNumber] = useState(\"\"); // Состояние для номера карты\r\n    const [expiryDate, setExpiryDate] = useState(\"\"); // Состояние для даты истечения срока действия карты\r\n    const [cvv, setCvv] = useState(\"\"); // Состояние для кода карты\r\n    const location = useLocation(); // Получение параметров из URL\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const price = queryParams.get('price'); // Получение стоимости из URL\r\n    \r\n    const formatAndSetCcNumber = useCallback((e: React.ChangeEvent<HTMLInputElement>) => { // Обработчик изменения номера карты\r\n        const inputVal = e.target.value.replace(/\\D/g, \"\"); // Удаление всех символов, кроме цифр\r\n\r\n        const formattedNumber = inputVal.match(/.{1,4}/g)?.join(\" \") || \"\"; // Разделяем введенное значение на группы по 4 символа и добавляем пробелы между ними\r\n        setCcNumber(formattedNumber); // Устанавливаем введенное значение в состояние\r\n    }, []);\r\n\r\n    const handleChangeExpiryDate = useCallback((event: React.ChangeEvent<HTMLInputElement>) => { // Обработчик изменения даты истечения срока действия карты\r\n        const inputVal = event.target.value.replace(/\\D/g, \"\"); // Удаление всех символов, кроме цифр\r\n        setExpiryDate(inputVal.slice(0, 4)); // Ограничиваем значение до 4 символов\r\n    }, []);\r\n\r\n    const handleChangeCvv = useCallback((event: React.ChangeEvent<HTMLInputElement>) => { // Обработчик изменения кода карты\r\n        const inputVal = event.target.value.replace(/\\D/g, \"\"); // Удаление всех символов, кроме цифр\r\n        setCvv(inputVal.slice(0, 3)); // Ограничиваем значение до 3 символов\r\n    }, []);\r\n    \r\n    return(\r\n        <section className=\"payment-page\">\r\n            <h2 className=\"payment-page__price\">{price} ₽</h2>\r\n            <div className=\"payment-page__payment-card\">\r\n                <h3 className=\"payment-card__heading\">Оплата картой</h3>\r\n                <input \r\n                    className=\"payment-card__input\" \r\n                    type=\"text\" \r\n                    placeholder=\"Номер\" \r\n                    value={ccNumber} \r\n                    onChange={formatAndSetCcNumber} \r\n                    maxLength={19} // Максимальная длина ввода (16 цифр + 3 пробела)\r\n                />\r\n                <div className=\"payment-card__inputs-group\">\r\n                    <input \r\n                        className=\"payment-card__input\" \r\n                        type=\"text\" \r\n                        placeholder=\"ММГГ\" \r\n                        value={expiryDate} \r\n                        onChange={handleChangeExpiryDate} \r\n                        maxLength={4} // Максимальная длина ввода\r\n                    />\r\n                    <input \r\n                        className=\"payment-card__input\" \r\n                        type=\"text\" \r\n                        placeholder=\"CVC/CVV\" \r\n                        value={cvv} \r\n                        onChange={handleChangeCvv} \r\n                        maxLength={3} // Максимальная длина ввода\r\n                    />\r\n                </div>\r\n            </div>\r\n            <a href=\"scam\" className=\"payment-page__pay-link\">Оплатить</a>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PaymentPage;"],"names":["ccNumber","setCcNumber","useState","expiryDate","setExpiryDate","cvv","setCvv","location","useLocation","price","URLSearchParams","search","get","formatAndSetCcNumber","useCallback","e","_inputVal$match","formattedNumber","target","value","replace","match","join","handleChangeExpiryDate","event","inputVal","slice","handleChangeCvv","_jsxs","className","children","_jsx","type","placeholder","onChange","maxLength","href"],"sourceRoot":""}